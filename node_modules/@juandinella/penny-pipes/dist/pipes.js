'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var lazypipe = _interopDefault(require('lazypipe'));
var prettify = _interopDefault(require('gulp-jsbeautifier'));
var replace = _interopDefault(require('gulp-html-replace'));
var name = _interopDefault(require('gulp-rename'));
var groupCssMediaQueries = _interopDefault(require('gulp-group-css-media-queries'));
var cleanCSS = _interopDefault(require('gulp-clean-css'));
var compiler = _interopDefault(require('gulp-pug'));
var purgecss = _interopDefault(require('gulp-purgecss'));
var moduleImporter = _interopDefault(require('sass-module-importer'));
var sass = _interopDefault(require('gulp-sass'));
var postCss = _interopDefault(require('gulp-postcss'));
var concat = _interopDefault(require('gulp-concat'));
var sourcemaps = _interopDefault(require('gulp-sourcemaps'));
var autoprefixer = _interopDefault(require('autoprefixer'));

const html = ({
  htmlReplace
}) => {
  return lazypipe()
    .pipe(replace, htmlReplace)
    .pipe(prettify)
};

const minifyStyles = rename => {
  const renameDefaults = { suffix: ".min" };
  const renameConfig = Object.assign({}, renameDefaults, rename);
  return lazypipe()
    .pipe(name, renameConfig)
    .pipe(groupCssMediaQueries)
    .pipe(cleanCSS)
};

const pug = ({
  pug
}) => {
  return lazypipe()
    .pipe(compiler, pug)
    .pipe(prettify)
};

const purge = ({ content }) => {
  return lazypipe().pipe(purgecss, content);
};

const styles = ({
  name = "main.css",
  production = false,
  postCssPlugins = []
}) => {
  const basePlugins = [autoprefixer({})];

  const postCssPlugs = [...basePlugins, ...postCssPlugins];

  const baseStyles = lazypipe()
    .pipe(sass, { importer: moduleImporter() })
    .pipe(postCss, postCssPlugs)
    .pipe(concat, name);

  const sourcemapStyles = lazypipe()
    .pipe(sourcemaps.init)
    .pipe(baseStyles)
    .pipe(sourcemaps.write, ".");

  return production ? baseStyles : sourcemapStyles;
};

exports.html = html;
exports.minifyStyles = minifyStyles;
exports.pug = pug;
exports.purge = purge;
exports.styles = styles;
